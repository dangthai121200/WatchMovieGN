version: "2.2"

volumes:
    volume-mysql:
    volume-elasticsearch:
    volume-rabbitmq-data:
    volume-rabbitmq-log:
networks:
  local-nextwork:
services:
#  watchmoviegn-gateway-webservice:
#    container_name: watchmoviegn-gateway-webservice
#    build:
#      context: ..\WatchMovieGN-BE\WatchMovieGN-Parent\WatchMovieGN-Webservice-Parent\WatchMovieGN-GateWay-Webservice
#      dockerfile: Dockerfile
#    image: gaonet567/watchmoviegn-gateway-webservice
#    networks:
#      - local-nextwork
#    ports:
#      - 8080:8080
#    depends_on:
#      - elasticsearch
#      - mysql
#      - rabbitmq
#  watchmoviegn-movie-webservice:
#    container_name: watchmoviegn-movie-webservice
#    build:
#      context: ..\WatchMovieGN-BE\WatchMovieGN-Parent\WatchMovieGN-Webservice-Parent\WatchMovieGN-Movie-Webservice
#      dockerfile: Dockerfile
#    image: gaonet567/watchmoviegn-movie-webservice
#    network_mode: host
#    ports:
#      - 8081:8081
#    depends_on:
#      - watchmoviegn-gateway-webservice
#  watchmoviegn-premium-webservice:
#    container_name: watchmoviegn-premium-webservice
#    build:
#      context: ..\WatchMovieGN-BE\WatchMovieGN-Parent\WatchMovieGN-Webservice-Parent\WatchMovieGN-Premium-Webservice
#      dockerfile: Dockerfile
#    image: gaonet567/watchmoviegn-premium-webservice
#    network_mode: host
#    ports:
#      - 8082:8082
#    depends_on:
#      - watchmoviegn-gateway-webservice
#  watchmoviegn-search-webservice:
#    container_name: watchmoviegn-search-service
#    build:
#      context: ..\WatchMovieGN-BE\WatchMovieGN-Parent\WatchMovieGN-Webservice-Parent\WatchMovieGN-Search-Webservice
#      dockerfile: Dockerfile
#    image: gaonet567/watchmoviegn-search-webservice
#    network_mode: host
#    ports:
#      - 8083:8083
#    depends_on:
#      - watchmoviegn-gateway-webservice
#  watchmoviegn-user-webservice:
#    container_name: watchmoviegn-user-service
#    build:
#      context: ..\WatchMovieGN-BE\WatchMovieGN-Parent\WatchMovieGN-Webservice-Parent\WatchMovieGN-User-Webservice
#      dockerfile: Dockerfile
#    image: gaonet567/watchmoviegn-user-webservice
#    network_mode: host
#    ports:
#      - 8084:8084
#    depends_on:
#      - watchmoviegn-gateway-webservice
#  watchmoviegn-admin-page:
#    container_name: watchmoviegn-admin-page
#    build:
#      context: ..\WatchMovieGN-FE\watchmoviegn-admin-page
#      dockerfile: Dockerfile
#    image: gaonet567/watchmoviegn-admin-page
#    networks:
#      - local-nextwork
#    ports:
#      - 3000:3000
  mysql:
    image: mysql:8.0
    container_name: mysql
    volumes:
      - volume-mysql:/var/lib/mysql
    networks:
      - local-nextwork
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: true
      MYSQL_USER: watchmoviegn
      MYSQL_PASSWORD: watchmoviegn
      MYSQL_DATABASE: watchmoviegn
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.11.0
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    networks:
      - local-nextwork
    ports:
      - 9200:9200
    volumes:
      - volume-elasticsearch:/usr/share/elasticsearch/config/certs
  kibana:
    container_name: kibana
    image: kibana:8.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - local-nextwork
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
#  rabbitmq:
#    image: rabbitmq:3-management-alpine
#    container_name: 'rabbitmq'
#    ports:
#        - 5672:5672
#        - 15672:15672
#    environment:
#        - RABBITMQ_DEFAULT_USER=watchmoviegn
#        - RABBITMQ_DEFAULT_PASS=watchmoviegn
#    volumes:
#        - volume-rabbitmq-data:/var/lib/rabbitmq/
#        - volume-rabbitmq-log:/var/log/rabbitmq
#    networks:
#        - local-nextwork
  